apiVersion: apps/v1
kind: Deployment
metadata:
  name: florida-elite-app
  namespace: production
  labels:
    app: florida-elite
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: florida-elite
      component: backend
  template:
    metadata:
      labels:
        app: florida-elite
        component: backend
    spec:
      containers:
      - name: app
        image: ghcr.io/florida-elite/app:latest
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: florida-elite-secrets
              key: database-url
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: florida-elite-secrets
              key: session-secret
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: florida-elite-secrets
              key: redis-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: uploads
          mountPath: /app/.data
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: florida-elite-uploads

---
apiVersion: v1
kind: Service
metadata:
  name: florida-elite-service
  namespace: production
spec:
  selector:
    app: florida-elite
    component: backend
  ports:
  - port: 80
    targetPort: 5000
    name: http
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: florida-elite-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: florida-elite-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: florida-elite-pdb
  namespace: production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: florida-elite
      component: backend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: florida-elite-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
spec:
  tls:
  - hosts:
    - floridaelite.com
    - www.floridaelite.com
    secretName: florida-elite-tls
  rules:
  - host: floridaelite.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: florida-elite-service
            port:
              number: 80
  - host: www.floridaelite.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: florida-elite-service
            port:
              number: 80
